export const content = [
  {
    title: "Components",
    content: [
      {
        p: "Приложения React состоят из компонентов. Компоненты позволяют разбить интерфейс на независимые части, про которые легко думать в отдельности. Их можно складывать вместе и использовать несколько раз. Компонент может быть маленьким, как кнопка, или большим, как целая страница.",
      },
      {
        p: "Компоненты — это независимые и многократно используемые фрагменты кода, функции. Они служат той же цели, что и функции JavaScript, но работают изолированно и возвращают JSX",
      },
      {
        h: "Функциональные и классовые компоненты",
      },
      { p: "Проще всего объявить React-компонент как функцию" },
      {
        c: `function Welcome(props) {
    return <h1> Привет, {props.name} </h1>;
}`,
      },
      { p: "С точки зрения React, эти два компонента эквивалентны." },
      {
        err: "Компонент класса должен включать extends React.Component оператор. Этот оператор создает наследование для React.Component и предоставляет вашему компоненту доступ к функциям React.Component.",
      },
      {
        h: "Композиция компонентов",
      },
      {
        p: "Компоненты могут ссылаться на другие компоненты в возвращённом ими дереве. Это позволяет использовать одну и ту же абстракцию — компоненты — на любом уровне нашего приложения. Неважно, пишем ли мы кнопку, форму или целый экран: все они, как правило, представляют собой компоненты в React-приложениях.",
      },
      {
        p: "Например, компонент App может отрендерить компонент Welcome несколько раз:",
      },
      {
        c: `function Welcome(props) {
return <h1>Привет, {props.name}</h1>;
}
  
function App() {
    return (
        <div>
            <Welcome name= "Алиса" />
            <Welcome name= "Базилио" />
            <Welcome name= "Буратино" />
        </div>
    );
}`,
      },
    ],
  },
];
